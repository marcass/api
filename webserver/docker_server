##
# file for serving stuff from/too docker services including
# - authentication via kong
# - data store in influxdb

server {

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;
  server_name skibo.duckdns.org; # managed by Certbot

        location / {
                if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
              #,Content-Type,Range' ;
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
     }
     if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
     }
     if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
     }
        }

        #Kong
        location /api {
      rewrite ^/api(.*) $1 break;
      proxy_pass http://127.0.0.1:8000/;
  }

  listen [::]:443 ssl ipv6only=on; # managed by Certbot
  listen 443 ssl; # managed by Certbot
  ssl_certificate /etc/letsencrypt/live/skibo.duckdns.org/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/skibo.duckdns.org/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
  if ($host = skibo.duckdns.org) {
      return 301 https://$host$request_uri;
  } # managed by Certbot


        listen 80 ;
        listen [::]:80 ;
  server_name skibo.duckdns.org;
  return 404; # managed by Certbot
}

server {
        # only kong can access api's below
        server_name 192.168.0.152;
        #listen 172.21.0.6:80;


        #OLED test
        location /kong/oled {
      rewrite ^/kong/(.*) $1 break;
      proxy_pass http://127.0.0.1:5006/;
  }

  #influx data
  location /kong/data {
          rewrite ^/kong/(.*) $1 break;
          proxy_pass http://127.0.0.1:5002/;
  }

  #door data
  location /kong/door {
          rewrite ^/kong/(.*) $1 break;
          proxy_pass http://127.0.0.1:5003/;
  }

  #auth api
  location /kong/auth {
          rewrite ^/kong/(.*) $1 break;
          proxy_pass http://127.0.0.1:5001/;
  }
}
