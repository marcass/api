##
# Place in sites available and enable for door service to be served
proxy_cache_path /tmp/nginx levels=1:2 keys_zone=cache_one:10m max_size=100m;
#uwsgi_cache_path /tmp/uwsgi levels=1:2 keys_zone=cache_uwsgi:16m max_size=60m;

server {
        #listen 80;
        #listen [::]:80;
        # SSL configuration
        #
        listen 443 ssl;
        server_name skibo.duckdns.org;
        ssl_certificate /etc/letsencrypt/live/skibo.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/skibo.duckdns.org/privkey.pem;
        root /var/www/html;
        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        location / {
             proxy_cache cache_one;
             # First attempt to serve request as file, then
             # as directory, then fall back to displaying a 404.
             try_files $uri $uri/ =404;
        }

        location /.well-known/acme-challenge {
                root /var/www/letsencrypt;
        }

        #influx data
        location /api/data {
                proxy_cache cache_one;
                rewrite ^/api(.*) $1 break;
                proxy_pass http://127.0.0.1:5002/;
        }

        #door data
        location /api/door {
                proxy_cache cache_one;
                rewrite ^/api(.*) $1 break;
                proxy_pass http://127.0.0.1:5003/;
        }

        #auth api
        location /api/auth {
                proxy_cache cache_one;
                rewrite ^/api(.*) $1 break;
                proxy_pass http://127.0.0.1:5001/;
        }

        #door api
#        location /api {
#                rewrite ^/api(.*) $1 break;
#                proxy_pass http://127.0.0.1:5000/;
#        }

        #uwsgi api
#        location /api {
#               rewrite ^/api(.*) $1 break;
#               try_files $uri @api; }
#        location @api {
                #uwsgi_cache cache_uwsgi;
                #uwsgi_cache_key $uri;
                #expires 5m;
                #uwsgi_cache_valid any 1h;
#                include uwsgi_params;
#                uwsgi_pass unix:///tmp/api.sock;
#        }
}

##############################################################################
################    Old config        #######################################
proxy_cache_path /tmp/nginx levels=1:2 keys_zone=cache_one:10m max_size=100m;
uwsgi_cache_path /tmp/uwsgi levels=1:2 keys_zone=cache_uwsgi:16m max_size=60m;

server {
        listen 80;
        listen [::]:80;
        # SSL configuration
        #
        listen 443 ssl;
        server_name skibo.duckdns.org;
        ssl_certificate /etc/letsencrypt/live/skibo.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/skibo.duckdns.org/privkey.pem;
        root /var/www/html;
        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        location / {
             proxy_cache cache_one;
             # First attempt to serve request as file, then
             # as directory, then fall back to displaying a 404.
             try_files $uri $uri/ =404;
        }

        location /.well-known/acme-challenge {
                root /var/www/letsencrypt;
        }

        #influx data
        location /api/data {
                proxy_cache cache_one;
                rewrite ^/api(.*) $1 break;
               proxy_pass http://127.0.0.1:5000/;
        }

        #door api
#        location /api {
#                rewrite ^/api(.*) $1 break;
#                proxy_pass http://127.0.0.1:5000/;
#        }

        #uwsgi api
        location /api {
               rewrite ^/api(.*) $1 break;
               try_files $uri @api; }
        location @api {
                uwsgi_cache cache_uwsgi;
                uwsgi_cache_key $uri;
                expires 5m;
                uwsgi_cache_valid any 1h;
                include uwsgi_params;
                uwsgi_pass unix:///tmp/api.sock;
        }
}
