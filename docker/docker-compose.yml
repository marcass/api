version: '3.7'

# connect to pre-esisting network. if not created create by:
# docker network create vexme
networks:
  vexme6:
    external:
      name: vexme6

# networks:
#   influx:
#     driver: bridge

services:

  ##########################################
  # Datastore
  ##########################################
  influxdb:
    image: influxdb:latest
    restart: unless-stopped
    # needs a network for a container to perform backups
    networks:
      - vexme6
    # determine if we need to expose influxdb to host or
    # can keep in dodker network
    # expose:
    #   - "8088"
    #   - "8086"
    # following exposes ports to host
    ports:
      - "8086:8086"
      - "8088:8088"
    volumes:
      - influx:/var/lib/influxdb

  ##########################################
  # Grafana for visualisatons
  ##########################################
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    networks:
      - vexme6
    environment:
      GF_SERVER_ROOT_URL: http://grafana/api/grafana
    depends_on:
      - influxdb
      - prometheus
    expose:
      - "3000"
    # https://grafana.com/docs/installation/docker/#migration-from-a-previous-version-of-the-docker-container-to-5-1-or-later
    # user: "104"
    volumes:
      - grafana-storage:/var/lib/grafana

  ##########################################
  # prometheus for kong and docker metrics
  ##########################################
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    networks:
      - vexme6
    ports:
      - "9090:9090"
        #command:
        #- --config.file=./prometheus.yml
    volumes:
      # copy ./prometheus.yml to /tmp/prometheus.yml
      - /home/mw/git/api/docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    # Need to have this in /etc/docker/daemon.json on host:
    #   {
    #     "metrics-addr" : "0.0.0.0:9323",
    #     "experimental" : true
    #   }

  ##########################################
  # API's
  ##########################################
  auth-api:
    build:
      context: .
      dockerfile: "./auth_docker"
    networks:
      - vexme6
    depends_on:
      - influxdb
    expose:
      - "5001"
    # ports:
    #   - "5001:5001"
  sensor-api:
    build:
      context: .
      dockerfile: "./sensor_docker"
    networks:
      - vexme6
    restart: unless-stopped
    depends_on:
      - influxdb
    expose:
      - "5002"
  tank-ingress-api:
    build:
      context: .
      dockerfile: "./tankingress_docker"
    networks:
      - vexme6
    restart: unless-stopped
    depends_on:
      - influxdb
    expose:
      - "5003"


#  door-api:
#    build:
#      context: .
#      dockerfile: "./door_docker"
#    restart: unless-stopped
#    ports:
#      - "5003:5003"

  ##########################################
  # alerts
  #########################################

  alerts:
    build:
      context: .
      dockerfile: "./alerts_docker"
    networks:
      - vexme6
    depends_on:
      - grafana


volumes:
  grafana-storage:
  influx:
    external:
      name: influx
